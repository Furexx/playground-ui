/**
 * Every editor column has a template for editing and presentation mode.
 * This method replaces the attribute for editing in the template of every editor column, with the column key.
 * When the user clicks on a column, the custom data generator sets the column key as an attribute in the item
 * and the editor will open only for the selected cell, instead of the whole row.
 *
 * @param columnElement
 * @param columnKey
 */
window.replaceEditColumnAttr = (columnElement, columnKey) => {
    const childElements = columnElement.childNodes;

    if (!Array.isArray(childElements) && !childElements.length) {
        return;
    }

    childElements.forEach(element => {
        // Put the column key as an attribute for editor on and for editor off
        element.innerHTML = element.innerHTML.replace('[[item._editing]]', '[[item.' + columnKey + ']]')
            .replace('[[!item._editing]]', '[[!item.' + columnKey + ']]');
    });
}

/**
 * This method prevents the grid to remove 'navigating' property on click, therefore the focus ring will be shown
 * when a user clicks on an item.
 */
window.allowGridCellFocusing = (grid) => {
    grid.addEventListener('mousedown', event => {
        grid._toggleAttribute('navigating', true, grid);
        event.stopImmediatePropagation();
    });

    grid.addEventListener('focusout', event => {
        grid._toggleAttribute('navigating', true, grid);
        event.stopImmediatePropagation();
    });
}

/**
 * Called when the editor is opened for a specific cell.
 * Some fields need special behavior when they are focused - focus-ring for check-boxes
 * or opened state for elements with drop down.
 */
window.onFocusEditorElement = (editorElement) => {
    if (editorElement.nodeName === 'VAADIN-CHECKBOX') {
        setTimeout(() => editorElement.setAttribute('focus-ring', ''));
    } else if (editorElement.nodeName === 'VAADIN-SELECT' || editorElement.nodeName === 'VAADIN-COMBO-BOX'
        || editorElement.nodeName === 'VAADIN-DATE-PICKER') {
        setTimeout(() => editorElement.setAttribute('opened', ''));
    }
}